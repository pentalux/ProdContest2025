let authId = null;
let checkInterval = null;

function startTelegramAuth() {
    console.log('Starting Telegram auth...');
    showStatus('–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏...', 'pending');
    document.getElementById('auth-btn').disabled = true;
    
    fetch('/init-auth')
        .then(response => response.json())
        .then(data => {
            authId = data.auth_id;
            showStatus('–û—Ç–∫—Ä—ã–≤–∞—é Telegram...', 'pending');
            
            window.open(data.bot_url, '_blank');
            startCheckingAuth();
        })
        .catch(error => {
            console.error('Error:', error);
            showStatus('–û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏', 'error');
            document.getElementById('auth-btn').disabled = false;
        });
}

function startCheckingAuth() {
    if (checkInterval) {
        clearInterval(checkInterval);
    }
    
    checkInterval = setInterval(() => {
        checkAuthStatus();
    }, 2000);
}

function checkAuthStatus() {
    if (!authId) return;
    
    fetch('/check-auth/' + authId)
        .then(response => response.json())
        .then(data => {
            console.log('Auth status:', data);
            
            if (data.status === 'completed') {
                clearInterval(checkInterval);
                showSuccess(data.user);
            } else if (data.status === 'pending') {
                showStatus('‚åõ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –≤ Telegram...<br><small>–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –§–ò–û –∏ –ø–æ–¥–µ–ª–∏—Ç–µ—Å—å –Ω–æ–º–µ—Ä–æ–º —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –≤ –±–æ—Ç–µ</small>', 'pending');
            } else if (data.status === 'not_found') {
                showStatus('‚ùå –°–µ—Å—Å–∏—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ —É—Å—Ç–∞—Ä–µ–ª–∞', 'error');
                document.getElementById('auth-btn').disabled = false;
                clearInterval(checkInterval);
            }
        })
        .catch(error => {
            console.error('Error checking auth:', error);
            showStatus('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å—Ç–∞—Ç—É—Å–∞', 'error');
        });
}

function showStatus(message, type) {
    const statusElement = document.getElementById('status');
    statusElement.innerHTML = message;
    statusElement.className = type;
    statusElement.style.display = 'block';
}

function showSuccess(user) {
    document.getElementById('auth-section').style.display = 'none';
    
    const fullName = `${user.last_name} ${user.first_name} ${user.middle_name || ''}`.trim();
    
    const userInfo = `
        <h2>‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞!</h2>
        <div class="user-info">
            <strong>–î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:</strong><br><br>
            üë§ <strong>–§–ò–û:</strong> ${fullName}<br>
            üì± <strong>–¢–µ–ª–µ—Ñ–æ–Ω:</strong> ${user.phone_number}<br>
            üÜî <strong>–£–Ω–∏–∫–∞–ª—å–Ω—ã–π ID:</strong> ${user.unique_id}<br>
            üí∞ <strong>–ë–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:</strong> ${user.user_balance || 0} —Ä—É–±.<br>
            üí≥ <strong>–ë–∞–ª–∞–Ω—Å –Ω–∞ —Å–∞–π—Ç–µ:</strong> ${user.site_balance || 0} —Ä—É–±.
        </div>
        <button onclick="logout()">–í—ã–π—Ç–∏</button>
    `;
    
    document.getElementById('user-info').innerHTML = userInfo;
    document.getElementById('user-info').style.display = 'block';
    
    localStorage.setItem('telegram_user', JSON.stringify(user));
}

function logout() {
    localStorage.removeItem('telegram_user');
    document.getElementById('user-info').style.display = 'none';
    document.getElementById('auth-section').style.display = 'block';
    document.getElementById('auth-btn').disabled = false;
    document.getElementById('status').style.display = 'none';
    authId = null;
}

window.addEventListener('load', function() {
    const savedUser = localStorage.getItem('telegram_user');
    if (savedUser) {
        const user = JSON.parse(savedUser);
        showSuccess(user);
    }
});

window.addEventListener('beforeunload', function() {
    if (checkInterval) {
        clearInterval(checkInterval);
    }
});